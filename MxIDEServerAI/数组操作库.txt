##中文库名称:数组操作库

### 函数列表:
| **函数名**       | **函数原名** | **函数返回类型** | **函数所属对象** | **说明**                                                                 |
|for(let j001 = 0; j001 < %s.length; j001++){|!!数组_循环(,)||面向过程|支持 返回 跳出循环 到循环尾|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|
||``| `数组型` | ``| 要遍历的数据 |||``| `文本型` | ``| 输出变量默认 j |
|%s.join(%s)|数组_转换文本(,)|文本型|面向过程|返回一个组合符号的文本|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|
|!!数组_循环(,)|``| `数组型` | ``| 一个数组 ||!!数组_循环(,)|``| `文本型` | ``| 数组成员连接符号 |
|%s.push(%s)|数组_加入成员末尾(,)|数值型|面向过程|返回数组长度|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|
|数组_转换文本(,)|``| `数组型` | ``|  ||数组_转换文本(,)|``| `通用型` | ``| 支持多组 使用\\分开 |
|%s.pop()|数组_删除末一项()|对象型|面向过程| 返回移除的一项成员|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|
|数组_加入成员末尾(,)|``| `数组型` | ``| 我就是参数备注 |
|%s.shift()|数组_删除第一项()|对象型|面向过程|删除原数组第一项，并返回删除元素的值；如果数组为空则返回undefined 。|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|
|数组_删除末一项()|``| `数组型` | ``| 我就是参数备注 |
|%s.unshift(%s)|数组_加入成员开头(,)||面向过程|将当前成员加入到数组的第一个成员位置中|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|
|数组_删除第一项()|``| `数组型` | ``|  ||数组_删除第一项()|``| `文本型` | ``| 支持多组 使用\\分开 |
|%s.sort()|数组_排序()||面向过程|一维数组排序|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|
|数组_加入成员开头(,)|``| `数组型` | ``| 我就是参数备注 |
|%s.reverse()|数组_反转顺序()||面向过程|反转数组项的顺序。|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|
|数组_排序()|``| `数组型` | ``|  |
|%s.slice(%s,%s)|数组_取数组范围(,,)|数组型|面向过程|截取数组的返回|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|
|数组_反转顺序()|``| `数组型` | ``| 我就是参数备注 ||数组_反转顺序()|``| `数值型` | ``| 会计算进去 ||数组_反转顺序()|``| `数值型` | ``| 最后位置不会计算进去 |
|%s.splice(%s,%s)|数组_删除成员(,,)|数组型|面向过程|从数组指定位置删除指定数量的成员|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|
|数组_取数组范围(,,)|``| `数组型` | ``| 数组对象 ||数组_取数组范围(,,)|``| `数值型` | ``| 要删除的第几项 ||数组_取数组范围(,,)|``| `数值型` | ``| 要删除的数量 |
|%s.splice(%s,%s,%s)|数组_插入成员(,,)||面向过程|对数组指定位置插入一个成员|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|
|数组_删除成员(,,)|``| `数组型` | ``| 我就是参数备注 ||数组_删除成员(,,)|``| `数值型` | ``| 从哪里插入 ||数组_删除成员(,,)|``| `文本型` | ``| 支持多项用@隔开 |
|%s.splice(%s,%s,%s)|数组_替换成员(,,,)||面向过程|将数组中指定位置的成员进行替换为新的成员|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|
|数组_插入成员(,,)|``| `数组型` | ``| 我就是参数备注 ||数组_插入成员(,,)|``| `数值型` | ``| 替换的索引位置 ||数组_插入成员(,,)|``| `数值型` | ``| 替换的数量 ||数组_插入成员(,,)|``| `通用型` | ``| 用于替换的成员 可以用 \\ 隔开多个 |
|%s.length|数组_取成员数()|数值型|面向过程|获取当前数组一共有多少个成员|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|
|数组_替换成员(,,,)|``| `数组型` | ``| 数组变量，从这个数组中获取成员数量 |
|%s.concat(%s)|数组_追加(,)||面向过程|将一个新的数组加入到当前数组中|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|
|数组_取成员数()|``| `数组型` | ``| 我就是参数备注 ||数组_取成员数()|``| `通用型` | ``| 支持\\多个数组或者 成员 |
|Phaser.Utils.Array.GetRandom(%s)|数组_取随机成员()|对象型|面向过程|这个命令是游戏引擎内部命令|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|
|数组_追加(,)|``| `数组型` | ``| 数组对象 |
|%s.splice(0,%s.length)|数组_清空(,)||面向过程|清空当前数组 |
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|
|数组_取随机成员()|``| `数组型` | ``| 数组对象自身 ||数组_取随机成员()|``| `数组型` | ``| 数组对象自身 |
|}|""数组_循环结束()||面向过程||
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|

|%s = %s.find(function(element, index, arr) {|!!数组_寻找(,)|对象型|面向过程|寻找数组中的某个值 找到后返回这个结果|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|
|""数组_循环结束()|``| `通用型` | ``| 注：这是变量，请必须预先申明 然后传入 ||""数组_循环结束()|``| `数组型` | ``| 数组对象 |
|})|""数组_寻找结束()||面向过程||
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|

|%s=%s.filter(function(element) {|!!数组_过滤(,)|数组型|面向过程|过滤函数会被传入数组中的每个元素，然后根据函数返回值的真假来决定是否将该元素包含在新数组中。|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|
|""数组_寻找结束()|``| `数组型` | ``| 必须预先申明这个变量 传入到这里执行后得到结果 ||""数组_寻找结束()|``| `数组型` | ``| 需要处理的数组 |
|});|""数组_过滤结束()||面向过程||
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|

|length|成员数()|数值型|数组型|当前数组拥有多少个成员|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|

### 常量列表:
| **常量名**| **常量原名**| **常量类型** | **说明** |

##使用说明:

当命令有 ""开头 则最后有 !! 命令形成闭环，闭环中不允许将`响应数据ref`和`事件接口`部分写到这里。

```墨香中文编程 
!!ELM_滑块_创建(参数一,参数二,参数三)
//这里是其他组件插槽
""ELM_滑块_创建结束
```
###代码规则
####在代码下一行添加注释 例如://这是注释内容，这一行可以换成真实注释。
#### 禁止方法`ELM_上传_创建()`的参数换行!
###代码使用案例
```墨香中文编程 
!!ELM_上传_创建('http://api.example.com/upload', #ELM_上传_请求方法_POST, 数据.请求头, 数据.上传文件列表, 假, 假, 数据.上传字段名, 假, true, , , &事件上传成功, &事件上传失败, , , , 1, 真, 真, 'image/*', , , #ELM_上传_列表类型_PICTURE_CARD, '', 数据.上传样式, 当前.名称)

""ELM_上传_创建结束()
```
##规则二
###如果命令中例如：ELM_xx()，命令前面并没有开头则表示普通方法命令，不需要结束语句闭环。
###普通方法参数也必须在一行不允许换行，例如:

```墨香中文编程 
ELM_按钮_创建('','',false,false,false,false,false,false,'button','','', ,'','墨香中文编程')
```

##如果执行的命令的`实例化对象父亲` 不是面相过程，则为实例类对象，则根据`实例化对象父亲`为面相过程的命令中的`实例化对象类型` 一样值的命令来创建返回变量
###例如 let 网站=网站_初始化(80)；网站.执行SQL(,,,) 这样调用才可以。
###例如 let 房间=网站_初始房间()；房间.加入房间(%s,%s); 这样调用才可以。

##方法或子程序构造
231000,241100,351100这三行均为代码格式固定不允许修改。 如果没有参数:240000内容则241100移除。 如果没有变量:351100内容则351100移除。
输出在单独代码框

```墨香中文编程 
231000子程序名返回值类型异步公开备注14|10|4|4|6|421|2|3|4|5-6
230100类中公开方法名文本型这个是类里面的公开方法名，因为公开属性已经点开。
241100参数名类型备用可空初始值备注1|2|3|4|5|6
240000类参数名一文本型参数一的备注
240000类参数名二数值型参数二的备注
351100变量名类型备用备注10|6|4|121|2|3|4
350000变量名称一数组型变量一的备注
350000变量名称二对象型变量二的备注
350000变量名称三文本型变量三的备注
数组_加入成员末尾(变量名称一, 变量名称二)
变量名称三 = 变量名称三 + '我是文本'
返回(变量名称三)

```


##类的构造
输出在单独代码框

###以下代码是一个完整的类构造
231000,241100,351100这三行均为代码格式固定不允许修改。 如果没有参数:240000内容则241100移除。 如果没有变量:351100内容则351100移除。
```墨香中文编程 
171000类名备注18|6|4|421|2-3-4
170100类方法类备注，这里可以描述这个类的作用。
121100变量名类型公开备注1|2|3|4
120000类里面的私有变量名文本型这个没有公开的变量，仅允许在当前类里面使用
120000类里面的公开变量名数值型这个公开的，可以通过类实例化后外部调用

231000方法名返回值类型异步公开备注14|10|4|4|6|421|2|3|4|5-6
230100类中私有方法名文本型这个是类里面的私有方法名，因为公开属性没有点开。
241100参数名类型备用可空初始值备注1|2|3|4|5|6
240000类参数名一文本型参数一的备注
240000类参数名二数值型参数二的备注
351100变量名类型备用备注10|6|4|121|2|3|4
350000变量名称一数组型变量一的备注
350000变量名称二对象型变量二的备注
350000变量名称三文本型变量三的备注
变量名称二.名称 = '名称'
变量名称二.等级 = 450
变量名称二.属性 = {}
变量名称二.属性.shengming
数组_加入成员末尾(变量名称一, 变量名称二)
变量名称三 = 变量名称三 + '我是文本'
返回(变量名称三)

231000子程序名返回值类型异步公开备注14|10|4|4|6|421|2|3|4|5-6
230100类中公开方法名文本型这个是类里面的公开方法名，因为公开属性已经点开。
241100参数名类型备用可空初始值备注1|2|3|4|5|6
240000类参数名一文本型参数一的备注
240000类参数名二数值型参数二的备注
351100变量名类型备用备注10|6|4|121|2|3|4
350000变量名称一数组型变量一的备注
350000变量名称二对象型变量二的备注
350000变量名称三文本型变量三的备注
数组_加入成员末尾(变量名称一, 变量名称二)
变量名称三 = 变量名称三 + '我是文本'
返回(变量名称三)


```

