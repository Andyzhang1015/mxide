##中文库名称:转换操作库

### 函数列表:
| **函数名**       | **函数原名** | **函数返回类型** | **函数所属对象** | **说明**                                                                 |
|String(%s)|到文本()|文本型|面向过程|将变量转换为字符串|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|
||``| `文本型` | ``|  |
|%s.toString()|到文本Ex()|文本型|面向过程| 将变量转换为字符串（适用于对象和原始值）|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|
|到文本()|``| `通用型` | ``| 任意变量 |
|Number(%s)|到数值()|数值型|面向过程|将变量转换为数字。|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|
|到文本Ex()|``| `文本型` | ``| 例如："123" 转换到 123 |
|parseInt(%s)|到整数()|整数型|面向过程|将字符串转换为整数。|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|
|到数值()|``| `通用型` | ``| "123.4"  到 123 或 123.5 到 123 |
|parseFloat(%s)|到浮点()|数值型|面向过程|将字符串转换为浮点数。|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|
|到整数()|``| `文本型` | ``| "123.45" 转换为 123.45 |
|Math.abs(%s)|取绝对值()|数值型|面向过程|返回这个数的绝对值|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|
|到浮点()|``| `数值型` | ``| 例如:-1 结果返回 1 |
|Math.ceil(%s)|取上整数()|整数型|面向过程|返回大于或等于 x 的最小整数（向上取整）。|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|
|取绝对值()|``| `数值型` | ``| 4.3 返回 5 |
|Math.floor(%s)|取下整数()|整数型|面向过程|返回小于或等于 x 的最大整数（向下取整）。|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|
|取上整数()|``| `数值型` | ``| 4.7 返回 4 |
|Math.round(%s)|取四舍五入()|数值型|面向过程|返回 x 四舍五入后的整数。|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|
|取下整数()|``| `数值型` | ``| 4.5 返回 5 ，4.4 返回 4 |
|Math.trunc(%s)|取整数()|整数型|面向过程|返回 x 的整数部分（去除小数部分）。|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|
|取四舍五入()|``| `数值型` | ``| 4.9 返回 4 |
|Math.sin(%s)|取正弦值(Math.PI / 2)|数值型|面向过程|Math.sin(x) 返回 x 的正弦值（x 为弧度）|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|
|取整数()|`Math.PI / 2`| `数值型` | `Math.PI / 2`| Math.PI / 2 返回 1 |
|Math.cos(%s)|取余弦值(Math.PI)|数值型|面向过程|Math.cos(x) 返回 x 的余弦值（x 为弧度）|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|
|取正弦值(Math.PI / 2)|`Math.PI`| `数值型` | `Math.PI`| Math.PI 返回 -1 |
|Math.random()|取随机小数()|数值型|面向过程|Math.random() 返回一个 0 到 1 之间的伪随机数（包括 0，不包括 1）。|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|

|(function(min, max) {return Math.floor(Math.random() * (max - min + 1)) + min})(%s, %s)|取随机数(1,100)|整数型|面向过程|获取两个数之间的一个随机数值|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|
|取随机小数()|`1`| `整数型` | `1`| 要得到的最小值 ||取随机小数()|`100`| `整数型` | `100`| 要得到的最大值 |
|Math.hypot(%s - %s, %s - %s)|取两点距离(,,,)|数值型|面向过程|使用 Math.hypot 可以方便地计算两点之间的欧几里得距离：|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|
|取随机数(1,100)|``| `数值型` | ``| 对象2的x坐标 ||取随机数(1,100)|``| `数值型` | ``| 对象1的x坐标 ||取随机数(1,100)|``| `数值型` | ``| 对象2的y坐标 ||取随机数(1,100)|``| `数值型` | ``| 对象1的y坐标 |
|Date.now()|取时间戳()|数值型|面向过程|返回13位时间戳|
### 参数列表:
| **参数名**| **参数原名**| **参数类型**| **默认值**| **说明**|

### 常量列表:
| **常量名**| **常量原名**| **常量类型** | **说明** |

##使用说明:

当命令有 ""开头 则最后有 !! 命令形成闭环，闭环中不允许将`响应数据ref`和`事件接口`部分写到这里。

```墨香中文编程 
!!ELM_滑块_创建(参数一,参数二,参数三)
//这里是其他组件插槽
""ELM_滑块_创建结束
```
###代码规则
####在代码下一行添加注释 例如://这是注释内容，这一行可以换成真实注释。
#### 禁止方法`ELM_上传_创建()`的参数换行!
###代码使用案例
```墨香中文编程 
!!ELM_上传_创建('http://api.example.com/upload', #ELM_上传_请求方法_POST, 数据.请求头, 数据.上传文件列表, 假, 假, 数据.上传字段名, 假, true, , , &事件上传成功, &事件上传失败, , , , 1, 真, 真, 'image/*', , , #ELM_上传_列表类型_PICTURE_CARD, '', 数据.上传样式, 当前.名称)

""ELM_上传_创建结束()
```
##规则二
###如果命令中例如：ELM_xx()，命令前面并没有开头则表示普通方法命令，不需要结束语句闭环。
###普通方法参数也必须在一行不允许换行，例如:

```墨香中文编程 
ELM_按钮_创建('','',false,false,false,false,false,false,'button','','', ,'','墨香中文编程')
```

##如果执行的命令的`实例化对象父亲` 不是面相过程，则为实例类对象，则根据`实例化对象父亲`为面相过程的命令中的`实例化对象类型` 一样值的命令来创建返回变量
###例如 let 网站=网站_初始化(80)；网站.执行SQL(,,,) 这样调用才可以。
###例如 let 房间=网站_初始房间()；房间.加入房间(%s,%s); 这样调用才可以。

##方法或子程序构造
231000,241100,351100这三行均为代码格式固定不允许修改。 如果没有参数:240000内容则241100移除。 如果没有变量:351100内容则351100移除。
输出在单独代码框

```墨香中文编程 
231000子程序名返回值类型异步公开备注14|10|4|4|6|421|2|3|4|5-6
230100类中公开方法名文本型这个是类里面的公开方法名，因为公开属性已经点开。
241100参数名类型备用可空初始值备注1|2|3|4|5|6
240000类参数名一文本型参数一的备注
240000类参数名二数值型参数二的备注
351100变量名类型备用备注10|6|4|121|2|3|4
350000变量名称一数组型变量一的备注
350000变量名称二对象型变量二的备注
350000变量名称三文本型变量三的备注
数组_加入成员末尾(变量名称一, 变量名称二)
变量名称三 = 变量名称三 + '我是文本'
返回(变量名称三)

```


##类的构造
输出在单独代码框

###以下代码是一个完整的类构造
231000,241100,351100这三行均为代码格式固定不允许修改。 如果没有参数:240000内容则241100移除。 如果没有变量:351100内容则351100移除。
```墨香中文编程 
171000类名备注18|6|4|421|2-3-4
170100类方法类备注，这里可以描述这个类的作用。
121100变量名类型公开备注1|2|3|4
120000类里面的私有变量名文本型这个没有公开的变量，仅允许在当前类里面使用
120000类里面的公开变量名数值型这个公开的，可以通过类实例化后外部调用

231000方法名返回值类型异步公开备注14|10|4|4|6|421|2|3|4|5-6
230100类中私有方法名文本型这个是类里面的私有方法名，因为公开属性没有点开。
241100参数名类型备用可空初始值备注1|2|3|4|5|6
240000类参数名一文本型参数一的备注
240000类参数名二数值型参数二的备注
351100变量名类型备用备注10|6|4|121|2|3|4
350000变量名称一数组型变量一的备注
350000变量名称二对象型变量二的备注
350000变量名称三文本型变量三的备注
变量名称二.名称 = '名称'
变量名称二.等级 = 450
变量名称二.属性 = {}
变量名称二.属性.shengming
数组_加入成员末尾(变量名称一, 变量名称二)
变量名称三 = 变量名称三 + '我是文本'
返回(变量名称三)

231000子程序名返回值类型异步公开备注14|10|4|4|6|421|2|3|4|5-6
230100类中公开方法名文本型这个是类里面的公开方法名，因为公开属性已经点开。
241100参数名类型备用可空初始值备注1|2|3|4|5|6
240000类参数名一文本型参数一的备注
240000类参数名二数值型参数二的备注
351100变量名类型备用备注10|6|4|121|2|3|4
350000变量名称一数组型变量一的备注
350000变量名称二对象型变量二的备注
350000变量名称三文本型变量三的备注
数组_加入成员末尾(变量名称一, 变量名称二)
变量名称三 = 变量名称三 + '我是文本'
返回(变量名称三)


```

